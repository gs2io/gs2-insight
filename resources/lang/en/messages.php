<?php

return [
    "model.players" => "Player",
    "model.players.help" => "View player activity history and player data. Update player data.",
    "model.players.userId" => "User ID",
    "model.players.purchasedAmount" => "Purchased Amount",
    "model.players.lastAccessAt" => "Last Accessed At",
    "model.players.action.search" => "Search",
    "model.players.action.detail" => "Detail",

    "model.players.components.timeline.now" => "Now",
    "model.players.components.timeline.signUp" => "Sign-up",
    "model.players.components.timeline.outOfScope" => "Out of scope of acquired logs",
    "model.players.components.timeline.outOfSearchScope" => "Out of scope of search timespan",

    "model.stamina" => "Stamina",
    "model.stamina.namespace.name" => "Namespace Name",
    "model.stamina.namespace.action.search" => "Search",
    "model.stamina.namespace.action.detail" => "Detail",
    "model.stamina.staminaModel" => "Stamina Model",
    "model.stamina.staminaModel.name" => "Stamina Model Name",
    "model.stamina.staminaModel.action.search" => "Search",
    "model.stamina.staminaModel.action.detail" => "Detail",
    "model.stamina.staminas" => "Stamina Models",
    "model.stamina.stamina.name" => "Name",
    "model.stamina.stamina.value" => "Value",
    "model.stamina.stamina.action.consume" => "Consume",
    "model.stamina.stamina.action.accept" => "Accept",
    "model.stamina.stamina.action.recover" => "Recover",
    "model.stamina.stamina.action.detail" => "Detail",

    "model.quest" => "Quest",
    "model.quest.namespace.name" => "Namespace Name",
    "model.quest.namespace.action.search" => "Search",
    "model.quest.namespace.action.detail" => "Detail",
    "model.quest.questGroupModel" => "Quest Group Model",
    "model.quest.questGroupModel.name" => "Quest Group Model Name",
    "model.quest.questGroupModel.action.search" => "Search",
    "model.quest.questGroupModel.action.detail" => "Detail",
    "model.quest.questModel" => "Quest Model",
    "model.quest.questModel.name" => "Quest Model Name",
    "model.quest.questModel.action.search" => "Search",
    "model.quest.questModel.action.detail" => "Detail",
    "model.quest.questGroups" => "Quest Group Models",
    "model.quest.questGroup.name" => "Name",
    "model.quest.questGroup.action.detail" => "Detail",
    "model.quest.progress" => "Ongoing Quest",
    "model.quest.progress.transactionId" => "Transaction Id",
    "model.quest.progress.questModelId" => "Quest Model Id",
    "model.quest.progress.notFound" => "No quests in progress.",
    "model.quest.progress.action.start" => "Start",
    "model.quest.progress.action.complete" => "Complete",
    "model.quest.progress.action.failed" => "Failed",
    "model.quest.progress.action.delete" => "Delete",
    "model.quest.progress.action.accept" => "Accept",
    "model.quest.complete.action.reset" => "Reset Completed",
    "model.quest.complete.action.accept" => "Accept",
    "model.quest.quests" => "Quest Models",
    "model.quest.quest.name" => "Name",
    "model.quest.quest.completed" => "Status",
    "model.quest.quest.completed.true" => "Completed",
    "model.quest.quest.completed.false" => "Not Completed",
    "model.quest.quest.action.detail" => "Detail",

    "model.money" => "Money",
    "model.money.namespace.name" => "Namespace Name",
    "model.money.namespace.action.search" => "Search",
    "model.money.namespace.action.detail" => "Detail",
    "model.money.changedValue" => "Changed Value",
    "model.money.wallets" => "Wallets",
    "model.money.wallet.slot" => "Slot",
    "model.money.wallet.free" => "Free",
    "model.money.wallet.paid" => "Paid",
    "model.money.wallet.price" => "Price",
    "model.money.wallet.balance" => "Balance",
    "model.money.wallet.detail" => "Detail",
    "model.money.walletDetail.count" => "Count",
    "model.money.walletDetail.price" => "Price",
    "model.money.wallet.action.withdraw" => "Withdraw",
    "model.money.wallet.action.accept" => "Accept",
    "model.money.wallet.action.deposit" => "Deposit",
    "model.money.wallet.action.detail" => "Detail",

    "model.mission" => "Mission",
    "model.mission.namespace.name" => "Namespace Name",
    "model.mission.namespace.action.search" => "Search",
    "model.mission.namespace.action.detail" => "Detail",
    "model.mission.missionGroupModel" => "Mission Group Model",
    "model.mission.missionGroupModel.name" => "Mission Group Model Name",
    "model.mission.missionGroupModel.action.search" => "Search",
    "model.mission.missionGroupModel.action.detail" => "Detail",
    "model.mission.missionTaskModel" => "Mission Task Model",
    "model.mission.missionTaskModel.name" => "Mission Task Model Name",
    "model.mission.missionTaskModel.action.search" => "Search",
    "model.mission.missionTaskModel.action.detail" => "Detail",
    "model.mission.missionGroups" => "Mission Groups",
    "model.mission.missionGroup.name" => "Name",
    "model.mission.missionGroup.action.detail" => "Detail",
    "model.mission.missionTasks" => "Mission Tasks",
    "model.mission.missionTask.name" => "Name",
    "model.mission.missionTask.completed" => "Completed",
    "model.mission.missionTask.completed.true" => "Completed",
    "model.mission.missionTask.completed.false" => "Not Completed",
    "model.mission.missionTask.received" => "Received",
    "model.mission.missionTask.received.true" => "Received",
    "model.mission.missionTask.received.false" => "Not Received",
    "model.mission.missionTask.action.receive" => "Receive",
    "model.mission.missionTask.action.detail" => "Detail",
    "model.mission.counters" => "Counters",
    "model.mission.counter.name" => "Name",
    "model.mission.counter.value" => "Value",
    "model.mission.counter.action.reset" => "Reset",
    "model.mission.counter.action.accept" => "Accept",
    "model.mission.counter.action.increase" => "Increase",
    "model.mission.counter.action.detail" => "Detail",
    "model.mission.scopedValue.resetType" => "Reset Type",
    "model.mission.scopedValue.value" => "Value",
    "model.mission.complete.action.reset" => "Reset",
    "model.mission.complete.action.accept" => "Accept",

    "model.datastore" => "Datastore",
    "model.datastore.namespace.name" => "Namespace Name",
    "model.datastore.namespace.action.search" => "Search",
    "model.datastore.namespace.action.detail" => "Detail",
    "model.datastore.dataObject.name" => "Name",
    "model.datastore.dataObject.scope" => "Scope",
    "model.datastore.dataObject.scope.private" => "Private",
    "model.datastore.dataObject.scope.protected" => "Protected",
    "model.datastore.dataObject.scope.public" => "Public",
    "model.datastore.dataObject.status" => "Status",
    "model.datastore.dataObject.contentLength" => "Content Length",
    "model.datastore.dataObject.action.download" => "Download",
    "model.datastore.dataObject.action.delete" => "Delete",
    "model.datastore.dataObject.action.accept" => "Accept",
    "model.datastore.dataObject.action.detail" => "Detail",

    "model.inventory" => "Inventory",
    "model.inventory.namespace.name" => "Namespace Name",
    "model.inventory.namespace.action.search" => "Search",
    "model.inventory.namespace.action.detail" => "Detail",
    "model.inventory.inventoryModel" => "Inventory Model",
    "model.inventory.inventoryModel.name" => "Inventory Model Name",
    "model.inventory.inventoryModel.action.search" => "Search",
    "model.inventory.inventoryModel.action.detail" => "Detail",
    "model.inventory.itemModel" => "Item Model",
    "model.inventory.itemModel.name" => "Item Model Name",
    "model.inventory.itemModel.action.search" => "Search",
    "model.inventory.itemModel.action.detail" => "Detail",
    "model.inventory.inventories" => "Inventory Models",
    "model.inventory.inventory.name" => "Name",
    "model.inventory.inventory.capacity" => "Capacity",
    "model.inventory.inventory.action.detail" => "Detail",
    "model.inventory.inventory.action.updateCapacity" => "Update Capacity",
    "model.inventory.items" => "Item Models",
    "model.inventory.item.name" => "Item Set Name",
    "model.inventory.item.itemName" => "Item Name",
    "model.inventory.item.count" => "Count",
    "model.inventory.item.expiresAt" => "Expires At",
    "model.inventory.item.expiresAt.null" => "",
    "model.inventory.item.timestamp" => "Timestamp",
    "model.inventory.item.method" => "Method",
    "model.inventory.item.changedValue" => "Changed Value",
    "model.inventory.item.action.consume" => "Consume",
    "model.inventory.item.action.accept" => "Accept",
    "model.inventory.item.action.acquire" => "Acquire",
    "model.inventory.item.action.detail" => "Detail",

    "model.inbox" => "MessageBox",
    "model.inbox.namespace.name" => "Namespace Name",
    "model.inbox.namespace.action.search" => "Search",
    "model.inbox.namespace.action.detail" => "Detail",
    "model.inbox.messages" => "Messages",
    "model.inbox.message.name" => "Name",
    "model.inbox.message.metadata" => "Metadata",
    "model.inbox.message.isRead" => "Is Read",
    "model.inbox.message.isRead.true" => "Read",
    "model.inbox.message.isRead.false" => "Unread",
    "model.inbox.message.receivedAt" => "Received At",
    "model.inbox.message.expiresAt" => "Expires At",
    "model.inbox.message.expiresAt.null" => "",
    "model.inbox.message.timestamp" => "Timestamp",
    "model.inbox.message.method" => "Method",
    "model.inbox.message.action.send" => "Send",
    "model.inbox.message.action.read" => "Read",
    "model.inbox.message.action.delete" => "Delete",
    "model.inbox.message.action.accept" => "Accept",
    "model.inbox.message.action.detail" => "Detail",

    "model.friend" => "Friend",
    "model.friend.namespace.name" => "Namespace Name",
    "model.friend.namespace.action.search" => "Search",
    "model.friend.namespace.action.detail" => "Detail",
    "model.friend.followers" => "Followers",
    "model.friend.follower.targetUserId" => "Target User ID",
    "model.friend.follower.userId" => "Follower User ID",
    "model.friend.follower.publicProfile" => "Public Profile",
    "model.friend.follower.followerProfile" => "Follower Profile",
    "model.friend.follower.action.add" => "Follow",
    "model.friend.follower.action.delete" => "Unfollow",
    "model.friend.follower.action.accept" => "Accept",
    "model.friend.follower.action.detail" => "Detail",
    "model.friend.friends" => "Friends",
    "model.friend.friend.userId" => "Friend User ID",
    "model.friend.friend.targetUserId" => "Friend User ID",
    "model.friend.friend.publicProfile" => "Public Profile",
    "model.friend.friend.friendProfile" => "Friend Profile",
    "model.friend.friend.action.delete" => "Delete",
    "model.friend.friend.action.accept" => "Accept",
    "model.friend.friend.action.detail" => "Detail",
    "model.friend.profile" => "Profile",
    "model.friend.profile.publicProfile" => "Public Profile",
    "model.friend.profile.followerProfile" => "Profile for Follower",
    "model.friend.profile.friendProfile" => "Profile for Friend",
    "model.friend.sendRequest" => "Send Friend Requests",
    "model.friend.sendRequest.userId" => "Target User ID",
    "model.friend.sendRequest.targetUserId" => "Target User ID",
    "model.friend.sendRequest.action.delete" => "Delete Friend Request",
    "model.friend.sendRequest.action.accept" => "Accept",
    "model.friend.sendRequest.action.send" => "Send Friend Request",
    "model.friend.receiveRequest" => "Received Friend Requests",
    "model.friend.receiveRequest.userId" => "From User ID",
    "model.friend.receiveRequest.fromUserId" => "From User ID",
    "model.friend.receiveRequest.action.accept" => "Accept",
    "model.friend.receiveRequest.action.reject" => "Reject",
    "model.friend.profile.action.update" => "Update",

    "model.ranking" => "Ranking",
    "model.ranking.namespace.name" => "Namespace Name",
    "model.ranking.namespace.action.search" => "Search",
    "model.ranking.namespace.action.detail" => "Detail",
    "model.ranking.categoryModel" => "Category Model",
    "model.ranking.categoryModel.name" => "Category Model Name",
    "model.ranking.categoryModel.action.search" => "Search",
    "model.ranking.categoryModel.action.detail" => "Detail",
    "model.ranking.score.score" => "Score",
    "model.ranking.score.metadata" => "Metadata",
    "model.ranking.categories" => "Category Models",
    "model.ranking.category.action.detail" => "Detail",
    "model.ranking.category.action.calc" => "Calculate Ranking",

    "model.experience" => "Experience",
    "model.experience.namespace.name" => "Namespace Name",
    "model.experience.namespace.action.search" => "Search",
    "model.experience.namespace.action.detail" => "Detail",
    "model.experience.experienceModel" => "Experience Model",
    "model.experience.experienceModel.name" => "Experience Model Name",
    "model.experience.experienceModel.action.search" => "Search",
    "model.experience.experienceModel.action.detail" => "Detail",
    "model.experience.experiences" => "Experience Models",
    "model.experience.experience.name" => "Name",
    "model.experience.experience.action.detail" => "Detail",
    "model.experience.status" => "Status",
    "model.experience.status.propertyId" => "Property Id",
    "model.experience.status.rank" => "Rank",
    "model.experience.status.experience" => "Experience",
    "model.experience.status.experienceValue" => "Experience Value",
    "model.experience.status.rankCapValue" => "Rank Cap Value",
    "model.experience.status.timestamp" => "Timestamp",
    "model.experience.status.method" => "Method",
    "model.experience.status.changedValue" => "Changed Value",
    "model.experience.status.action.addExperience" => "Add Experience",
    "model.experience.status.action.setExperience" => "Set Experience",
    "model.experience.status.action.addRankCap" => "Add Rank Cap",
    "model.experience.status.action.setRankCap" => "Set Rank Cap",
    "model.experience.status.action.reset" => "Reset",
    "model.experience.status.action.accept" => "Accept",
    "model.experience.status.action.detail" => "Detail",

    "model.exchange" => "Exchange",
    "model.exchange.namespace.name" => "Namespace Name",
    "model.exchange.namespace.action.search" => "Search",
    "model.exchange.namespace.action.detail" => "Detail",
    "model.exchange.rateModel" => "Rate Model",
    "model.exchange.rateModel.name" => "Rate Model Name",
    "model.exchange.rateModel.action.search" => "Search",
    "model.exchange.rateModel.action.detail" => "Detail",
    "model.exchange.rates" => "Rate Models",
    "model.exchange.rate.name" => "Name",
    "model.exchange.rate.action.exchange" => "Exchange",
    "model.exchange.rate.action.detail" => "Detail",
    "model.exchange.awaits" => "Awaits",
    "model.exchange.await.rateName" => "Rate Name",
    "model.exchange.await.name" => "Name",
    "model.exchange.await.count" => "Count",

    "model.limit" => "Limit",
    "model.limit.namespace.name" => "Namespace Name",
    "model.limit.namespace.action.search" => "Search",
    "model.limit.namespace.action.detail" => "Detail",
    "model.limit.limitModel" => "Limit Model",
    "model.limit.limitModel.name" => "Limit Model Name",
    "model.limit.limitModel.action.search" => "Search",
    "model.limit.limitModel.action.detail" => "Detail",
    "model.limit.limits" => "Limit Models",
    "model.limit.limit.name" => "Name",
    "model.limit.limit.action.detail" => "Detail",
    "model.limit.counters" => "Counters",
    "model.limit.counter.limitName" => "Limit Name",
    "model.limit.counter.name" => "Name",
    "model.limit.counter.count" => "Count",
    "model.limit.counter.action.increase" => "Increase",
    "model.limit.counter.action.reset" => "Reset",
    "model.limit.counter.action.accept" => "Accept",
    "model.limit.counter.action.detail" => "Detail",

    "model.jobQueue" => "JobQueue",
    "model.jobQueue.namespace.name" => "Namespace Name",
    "model.jobQueue.namespace.action.search" => "Search",
    "model.jobQueue.namespace.action.detail" => "Detail",
    "model.jobQueue.jobs" => "Jobs",
    "model.jobQueue.job.name" => "Name",
    "model.jobQueue.job.scriptId" => "Script Id",
    "model.jobQueue.job.args" => "Args",
    "model.jobQueue.job.retry" => "Retry",
    "model.jobQueue.job.action.run" => "Run",
    "model.jobQueue.job.action.detail" => "Detail",

    "model.showcase" => "Showcase",
    "model.showcase.namespace.name" => "Namespace Name",
    "model.showcase.namespace.action.search" => "Search",
    "model.showcase.namespace.action.detail" => "Detail",
    "model.showcase.showcaseModel" => "Showcase Model",
    "model.showcase.showcaseModel.name" => "Showcase Model Name",
    "model.showcase.showcaseModel.action.search" => "Search",
    "model.showcase.showcaseModel.action.detail" => "Detail",
    "model.showcase.displayItemModel" => "Display Item Model",
    "model.showcase.displayItemModel.name" => "Display Item Model Name",
    "model.showcase.displayItemModel.action.search" => "Search",
    "model.showcase.displayItemModel.action.detail" => "Detail",
    "model.showcase.showcases" => "Showcases",
    "model.showcase.showcase.action.detail" => "Detail",
    "model.showcase.displayItems" => "Display Items",
    "model.showcase.displayItem.displayItemId" => "Display Item Id",
    "model.showcase.displayItem.action.buy" => "Buy",
    "model.showcase.displayItem.action.detail" => "Detail",

    "model.lottery" => "Lottery",
    "model.lottery.namespace.name" => "Namespace Name",
    "model.lottery.namespace.action.search" => "Search",
    "model.lottery.namespace.action.detail" => "Detail",
    "model.lottery.lotteryModel" => "Lottery Model",
    "model.lottery.lotteryModel.name" => "Lottery Model Name",
    "model.lottery.lotteryModel.action.search" => "Search",
    "model.lottery.lotteryModel.action.detail" => "Detail",
    "model.lottery.lotteries" => "Lottery Models",
    "model.lottery.lottery.name" => "Name",
    "model.lottery.lottery.action.lottery" => "Lottery",
    "model.lottery.lottery.action.detail" => "Detail",

    "model.dictionary" => "Dictionary",
    "model.dictionary.namespace.name" => "Namespace Name",
    "model.dictionary.namespace.action.search" => "Search",
    "model.dictionary.namespace.action.detail" => "Detail",
    "model.dictionary.entryModel" => "Entry Model",
    "model.dictionary.entryModel.name" => "Entry Model Name",
    "model.dictionary.entryModel.action.search" => "Search",
    "model.dictionary.entryModel.action.detail" => "Detail",
    "model.dictionary.entries" => "Entry Models",
    "model.dictionary.entry.name" => "Name",
    "model.dictionary.entry.action.add" => "Add",
    "model.dictionary.entry.action.reset" => "Reset All Entries",
    "model.dictionary.entry.action.accept" => "Accept",
    "model.dictionary.entry.action.detail" => "Detail",

    "model.chat" => "Chat",
    "model.chat.namespace.name" => "Namespace Name",
    "model.chat.namespace.action.search" => "Search",
    "model.chat.namespace.action.detail" => "Detail",
    "model.chat.rooms" => "Rooms",
    "model.chat.room" => "Room",
    "model.chat.room.name" => "Room Name",
    "model.chat.room.action.search" => "Search",
    "model.chat.room.action.detail" => "Detail",
    "model.chat.subscribe.roomName" => "Room Name",
    "model.chat.subscribe.action.add" => "Subscribe",
    "model.chat.subscribe.action.delete" => "Unsubscribe",
    "model.chat.subscribe.action.accept" => "Accept",

    "model.account" => "TakeOver",
    "model.account.namespace.name" => "Namespace Name",
    "model.account.namespace.action.search" => "Search",
    "model.account.namespace.action.detail" => "Detail",
    "model.account.takeOvers" => "TakeOver Settings",
    "model.account.takeOver.timestamp" => "Timestamp",
    "model.account.takeOver.method" => "Method",
    "model.account.takeOver.type" => "Type",
    "model.account.takeOver.userIdentifier" => "User Identifier",
    "model.account.takeOver.password" => "Password",
    "model.account.takeOver.createdAt" => "Created At",
    "model.account.takeOver.action.add" => "Add",
    "model.account.takeOver.action.delete" => "Delete",
    "model.account.takeOver.action.accept" => "Accept",
    "model.account.takeOver.action.detail" => "Detail",
    "model.account.dataOwners" => "Data Owner ID",
    "model.account.dataOwner.name" => "Data Owner ID",
    "model.account.dataOwner.action.delete" => "Delete",
    "model.account.dataOwner.action.accept" => "Accept",

    "model.gateway" => "Connection",
    "model.gateway.namespace.action.detail" => "Detail",
    "model.gateway.webSocketSession.action.disconnect" => "Disconnect",
    "model.gateway.webSocketSession.action.disconnectAll" => "Disconnect All Sessions",
    "model.gateway.webSocketSession.action.accept" => "Accept",

    "model.realtime" => "Realtime",
    "model.realtime.namespace.name" => "Namespace Name",
    "model.realtime.namespace.action.search" => "Search",
    "model.realtime.namespace.action.detail" => "Detail",

    "model.schedule" => "Schedule",
    "model.schedule.namespace.name" => "Namespace Name",
    "model.schedule.namespace.action.search" => "Search",
    "model.schedule.namespace.action.detail" => "Detail",

    "model.script" => "Script",
    "model.script.namespace.name" => "Namespace Name",
    "model.script.namespace.action.search" => "Search",
    "model.script.namespace.action.detail" => "Detail",

    "model.current" => "Current Values",
    "model.timelines" => "Timeline",
    "model.reload" => "Reload",

    "model.timestamp" => "Timestamp",
    "model.method" => "Method",
    "model.args" => "Arguments",
    "model.result" => "Result",

    "model.setup" => "Setup",
    "model.setup.help" => "Set access rights to the data sources used for aggregation.",
    "model.gcp.properties.datasetName" => "Google BigQuery Dataset Name",
    "model.gcp.properties.totalBytesProcessed" => "Total Bytes Processed",
    "model.gcp.properties.timespan.warning" => "Specifying a longer time period can be very costly.",
    "model.gcp.actions.load.Initialize" => "Initializing...",
    "model.gcp.actions.load.Timeline" => "Loading Timeline Logs...",
    "model.gcp.actions.load.Player" => "Loading Player Logs...",
    "model.gcp.actions.load.Account" => "Loading GS2-Account Logs...",
    "model.gcp.actions.load.Quest" => "Loading GS2-Quest Logs...",
    "model.gcp.actions.load.Inventory" => "Loading GS2-Inventory Logs...",
    "model.gcp.actions.load.Experience" => "Loading GS2-Experience Logs...",
    "model.gcp.actions.load.Money" => "Loading GS2-Money Logs...",
    "model.gcp.actions.load.Mission" => "Loading GS2-Mission Logs...",
    "model.gcp.actions.load.Stamina" => "Loading GS2-Stamina Logs...",
    "model.gcp.actions.load.Dictionary" => "Loading GS2-Dictionary Logs...",
    "model.gcp.actions.load.Inbox" => "Loading GS2-Inbox Logs...",
    "model.gcp.actions.load.Datastore" => "Loading GS2-Datastore Logs...",
    "model.gcp.actions.load.Friend" => "Loading GS2-Friend Logs...",
    "model.gcp.actions.load.Ranking" => "Loading GS2-Ranking Logs...",
    "model.gcp.actions.load.Chat" => "Loading GS2-Chat Logs...",
    "model.gcp.actions.load.Exchange" => "Loading GS2-Exchange Logs...",
    "model.gcp.actions.load.Showcase" => "Loading GS2-Showcase Logs...",
    "model.gcp.actions.load.Lottery" => "Loading GS2-Lottery Logs...",
    "model.gcp.actions.load.Limit" => "Loading GS2-Limit Logs...",
    "model.gcp.actions.load.JobQueue" => "Loading GS2-JobQueue Logs...",
    "model.gcp.actions.load.Realtime" => "Loading GS2-Realtime Logs...",
    "model.gcp.actions.load.Schedule" => "Loading GS2-Schedule Logs...",
    "model.gcp.actions.load.Script" => "Loading GS2-Script Logs...",
    "model.gcp.actions.load.Matchmaking" => "Loading GS2-Matchmaking Logs...",
    "model.gcp.actions.load.Version" => "Loading GS2-Version Logs...",
    "model.gcp.actions.load.Done" => "Finalizing...",
    "model.gcp.action.create" => "Setup",

    "model.gs2.setup" => "Additional settings to specify GS2 credentials to view and edit the latest information",
    "model.gs2.properties.clientId" => "Client Id",
    "model.gs2.properties.clientSecret" => "Client Secret",
    "model.gs2.properties.region" => "Region",
    "model.gs2.properties.permission" => "Permission",
    "model.gs2.action.create" => "Setup",

    "model.metrics" => "Metrics",
    "model.metrics.help" => "The entire game player's behavior can be viewed in chart form.",

    "model.danger" => "Danger",
    "model.danger.help" => "This is an operation that requires special attention when using",

    "model.stampSheet.action.detail" => "Detail",

    "action.Void" => "No Action",
    "action.Gs2Account:Authentication" => "Authentication (GS2-Account)",
    "action.Gs2Account:CreateTakeOver" => "Add a take over setting (GS2-Account)",
    "action.Gs2Account:DeleteTakeOver" => "Delete the take over setting (GS2-Account)",
    "action.Gs2Chat:Post" => "Post message (GS2-Chat)",
    "action.Gs2Chat:Subscribe" => "Subscribe the room (GS2-Chat)",
    "action.Gs2Chat:Unsubscribe" => "Unsubscribe the room (GS2-Chat)",
    "action.Gs2Datastore:PrepareUpload" => "Start Upload Object (GS2-Datastore)",
    "action.Gs2Datastore:DoneUpload" => "Done Upload Object (GS2-Datastore)",
    "action.Gs2Datastore:PrepareDownloadAndDataObjectName" => "Download Object (GS2-Datastore)",
    "action.Gs2Datastore:PrepareDownloadOwnData" => "Download Object (GS2-Datastore)",
    "action.Gs2Dictionary:AddEntries" => "Add an entry (GS2-Dictionary)",
    "action.Gs2Dictionary:Reset" => "Reset (GS2-Dictionary)",
    "action.Gs2Exchange:Exchange" => "Execute the exchange (GS2-Exchange)",
    "action.Gs2Exchange:Skip" => "Skip the await (GS2-Exchange)",
    "action.Gs2Exchange:Acquire" => "Receive the await (GS2-Exchange)",
    "action.Gs2Exchange:DeleteAwait" => "Exit exchange (GS2-Exchange)",
    "action.Gs2Enhance:DirectEnhance" => "Execute the enhancements (GS2-Enhance)",
    "action.Gs2Enhance:CreateProgress" => "Start the enhancements (GS2-Enhance)",
    "action.Gs2Exchange:CreateAwait" => "Start the exchange (GS2-Exchange)",
    "action.Gs2Experience:AddExperience" => "Gain experience (GS2-Experience)",
    "action.Gs2Experience:AddRankCap" => "Add rank cap (GS2-Experience)",
    "action.Gs2Experience:SetRankCap" => "Set rank cap (GS2-Experience)",
    "action.Gs2Experience:DeleteStatus" => "Reset status (GS2-Experience)",
    "action.Gs2Formation:AddMoldCapacity" => "Add capacity size (GS2-Formation)",
    "action.Gs2Formation:SetMoldCapacity" => "Set capacity size (GS2-Formation)",
    "action.Gs2Formation:AcquireActionsToFormProperties" => "Distribute rewards to properties that are organized (GS2-Formation)",
    "action.Gs2Friend:Follow" => "Follow (GS2-Friend)",
    "action.Gs2Friend:SendRequest" => "Send friend request (GS2-Friend)",
    "action.Gs2Friend:AcceptRequest" => "Accept friend request (GS2-Friend)",
    "action.Gs2Friend:RejectRequest" => "Reject friend request (GS2-Friend)",
    "action.Gs2Friend:DeleteFriend" => "Delete from friends (GS2-Friend)",
    "action.Gs2Friend:Unfollow" => "Delete from followers (GS2-Friend)",
    "action.Gs2Friend:UpdateProfile" => "Update own profile (GS2-Friend)",
    "action.Gs2Friend:DeleteRequest" => "Delete friend request (GS2-Friend)",
    "action.Gs2Inbox:SendMessage" => "Send a message (GS2-Inbox)",
    "action.Gs2Inbox:ReadMessage" => "Read the message(GS2-Inbox)",
    "action.Gs2Inbox:DeleteMessage" => "Delete the message(GS2-Inbox)",
    "action.Gs2Inventory:AddCapacity" => "Add capacity size (GS2-Inventory)",
    "action.Gs2Inventory:SetCapacity" => "Set capacity size (GS2-Inventory)",
    "action.Gs2Inventory:AcquireItemSet" => "Get the item (GS2-Inventory)",
    "action.Gs2Inventory:AddReferenceOf" => "Add a reference to the item (GS2-Inventory)",
    "action.Gs2Inventory:DeleteReferenceOf" => "Remove reference to an item (GS2-Inventory)",
    "action.Gs2Inventory:ConsumeItemSet" => "Consume the item (GS2-Inventory)",
    "action.Gs2JobQueue:Push" => "Register a job (GS2-JobQueue)",
    "action.Gs2JobQueue:Run" => "Run job (GS2-JobQueue)",
    "action.Gs2Limit:DeleteCounter" => "Initialize the counter (GS2-Limit)",
    "action.Gs2Lottery:Draw" => "Execute the lottery (GS2-Lottery)",
    "action.Gs2Mission:Complete" => "Complete mission task (GS2-Mission)",
    "action.Gs2Mission:Receive" => "Record the rewards received (GS2-Mission)",
    "action.Gs2Mission:IncreaseCounter" => "Increase the counter (GS2-Mission)",
    "action.Gs2Matchmaking:CreateGathering" => "Create matchmaking session (GS2-Matchmaking)",
    "action.Gs2Matchmaking:DoMatchmaking" => "Search matchmaking session (GS2-Matchmaking)",
    "action.Gs2Realtime:WantRoom" => "Create realtime session (GS2-Realtime)",
    "action.Gs2Money:Deposit" => "Deposit balance (GS2-Money)",
    "action.Gs2Money:Withdraw" => "Withdraw balance (GS2-Money)",
    "action.Gs2Quest:Start" => "Start a quest (GS2-Quest)",
    "action.Gs2Quest:End" => "End a quest (GS2-Quest)",
    "action.Gs2Quest:CreateProgress" => "Set quest to started state (GS2-Quest)",
    "action.Gs2Quest:DeleteProgress" => "Set quest to finished state (GS2-Quest)",
    "action.Gs2Script:Invoke" => "Invoke script (GS2-Script)",
    "action.Gs2Showcase:Buy" => "Buy (GS2-Showcase)",
    "action.Gs2Stamina:ConsumeStamina" => "Consume stamina (GS2-Stamina)",
    "action.Gs2Stamina:GetStamina" => "Fetch Stamina(GS2-Stamina)",
    "action.Gs2Stamina:RecoverStamina" => "Recover stamina (GS2-Stamina)",
    "action.Gs2Stamina:RaiseMaxValue" => "Raise maximum stamina (GS2-Stamina)",
    "action.Gs2Stamina:SetMaxValue" => "Set maximum stamina (GS2-Stamina)",
    "action.Gs2Stamina:SetRecoverInterval" => "Set stamina recovery interval (GS2-Stamina)",
    "action.Gs2Stamina:SetRecoverValue" => "Set stamina recovery amount (GS2-Stamina)",
    "action.Gs2Ranking:PutScore" => "Put Score (GS2-Ranking)",

    "error.quest.progress.progress.error.alreadyExists" => "There are quests already in progress",
];
